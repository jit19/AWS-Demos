ubuntu@ip-10-0-0-106:~$ cat sss-mongobackup.sh 
#!/bin/sh
DIR=`date +%m%d%y`
DEST=/var/backups/mongobakup/$DIR
mkdir $DEST
mongodump --username sssdb --password 'TatASsdB213' --db sssdb -o $DEST
======================================================
ubuntu@ip-10-0-0-106:~$ cat snapshots-mumbai-prod.sh 
#!/bin/bash

export JAVA_HOME=/usr
REGION=ap-south-1

VOLUMES_LIST=/var/log/volumes-list-prod
SNAPSHOT_INFO=/var/log/snapshot_info_prod.txt
DATE=`date +%Y-%m-%d`

#Snapshots Retention Period for each volume snapshot
RETENTION=5

SNAP_CREATION=/var/log/snap_creation_prod
SNAP_DELETION=/var/log/snap_deletion_prod

EMAIL_LIST=tul-snapshot-dl@dewsolutions.in


echo "List of Snapshots Creation Status" > $SNAP_CREATION
echo "List of Snapshots Deletion Status" > $SNAP_DELETION

#Check whether the volumes list file is available or not?

if [ -f $VOLUMES_LIST ];
then

#Creating Snapshot for each volume using for loop
    for VOL_INFO in `cat $VOLUMES_LIST`
    do

#Getting the Volume ID and Volume Name into the Separate Variables.

      VOL_ID=`echo $VOL_INFO | awk -F":" '{print $1}'`
      VOL_NAME=`echo $VOL_INFO | awk -F":" '{print $2}'`
 
#Creating the Snapshot of the Volumes with Proper Description.
 
      DESCRIPTION="${VOL_NAME}_SNAPSHOT_${DATE}"
      echo $DESCRIPTION
      aws ec2 create-snapshot --volume-id $VOL_ID --description "$DESCRIPTION" --region $REGION >> $SNAP_CREATION
    done
else
   echo "Volumes list file is not available : $VOLUMES_LIST Exiting." | mail -s "Snapshots Creation Status" $EMAIL_LIST
   exit 1
fi

echo >> $SNAP_CREATION
echo >> $SNAP_CREATION

#Deleting the Snapshots which are 10 days old.

for VOL_INFO in `cat $VOLUMES_LIST`
do

#Getting the Volume ID and Volume Name into the Separate Variables.
   VOL_ID=`echo $VOL_INFO | awk -F":" '{print $1}'`
   VOL_NAME=`echo $VOL_INFO | awk -F":" '{print $2}'`

#Getting the Snapshot details of each volume.
   aws ec2 describe-snapshots --query Snapshots[*].[SnapshotId,VolumeId,Description,StartTime] --region $REGION --output text --filters "Name=status,Values=completed" "Name=volume-id,Values=$VOL_ID" | grep -v "CreateImage" > $SNAPSHOT_INFO

#Snapshots Retention Period Checking and if it crosses delete them.

    while read SNAP_INFO
    do
       SNAP_ID=`echo $SNAP_INFO | awk '{print $1}'`
       #SNAP_DATE=`echo $SNAP_INFO | awk -F'\t' '{print $4}' | awk -F"T" '{print $1}'`
       SNAP_DATE=`echo $SNAP_INFO | awk '{print $4}' | awk -F"T" '{print $1}'`
   
#Getting the no.of days difference between a snapshot and present day.
       RETENTION_DIFF=`echo $(($(($(date -d "$DATE" "+%s") - $(date -d "$SNAP_DATE" "+%s"))) / 86400))`
       echo $RETENTION_DIFF

#Deleting the Snapshots which are older than the Retention Period
       if [ $RETENTION -lt $RETENTION_DIFF ];
       then
       aws ec2 delete-snapshot --snapshot-id $SNAP_ID --region $REGION --output text> /tmp/snap_del
       echo DELETING $SNAP_INFO >> $SNAP_DELETION
       fi
     done < $SNAPSHOT_INFO
done

echo >> $SNAP_DELETION

#Merging the Snap Creation and Deletion Data
cat $SNAP_CREATION $SNAP_DELETION > /var/log/mail_update_prod

#Sending the mail Update
cat /var/log/mail_update_prod | /usr/bin/mail -s 'Volume Snapshots Status Mumbai Prod Server' $EMAIL_LIST
